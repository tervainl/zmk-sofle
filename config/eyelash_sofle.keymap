#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&mt ESCAPE GRAVE  &kp N1          &kp N2          &kp N3              &kp N4            &kp N5        &none  &kp N6     &kp N7             &kp N8               &kp N9           &kp N0              &kp MINUS
&kp TAB           &kp Q           &kp W           &kp E               &kp R             &kp T         &none  &kp Y      &kp U              &kp I                &kp O            &kp P               &kp EQUAL
&trans            &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G         &none  &kp H      &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt RIGHT_ALT L  &mt RIGHT_GUI SEMI  &kp APOS
&trans            &kp Z           &kp X           &kp C               &kp V             &kp B         &none  &kp N      &kp M              &kp COMMA            &kp DOT          &kp FSLH            &kp BACKSLASH
&none             &trans          &trans          &mo 1               &kp SPACE         &kp DELETE    &none  &kp ENTER  &kp BACKSPACE      &trans               &kp LEFT_BRACE   &kp RIGHT_BRACE
            >;

            display-name = "LAYER0";
        };

        Function {
            bindings = <
&trans                &kp F1             &kp F2            &kp F3      &kp F4              &kp F5          &trans  &kp F6    &kp F7    &kp F8    &kp F9       &kp F10          &kp F11
&kp C_STOP            &kp C_PREVIOUS     &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_FAST_FORWARD  &kp C_REWIND    &trans  &trans    &trans    &trans    &trans       &trans           &kp F12
&kp C_BRIGHTNESS_INC  &kp C_VOLUME_UP    &trans            &trans      &mo 2               &trans          &trans  &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT    &kp PRINTSCREEN  &trans
&kp C_BRIGHTNESS_DEC  &kp C_VOLUME_DOWN  &trans            &trans      &trans              &trans          &trans  &trans    &trans    &kp HOME  &kp PAGE_UP  &kp INSERT       &trans
&trans                &trans             &trans            &trans      &trans              &trans          &trans  &trans    &trans    &mo 3     &kp END      &kp PAGE_DOWN
            >;
        };

        Number {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LOCKING_NUM  &trans           &trans           &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans           &kp KP_NUMBER_0  &trans           &kp KP_DOT  &trans
            >;
        };

        KB {
            bindings = <
&out OUT_TOG  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     &trans  &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_TOG
&trans        &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4    &trans  &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &bl BL_TOG
&trans        &trans         &trans         &trans         &trans         &trans           &trans  &bl BL_TOG       &trans           &trans           &trans           &trans           &trans
&sys_reset    &bootloader    &trans         &trans         &trans         &bt BT_CLR       &trans  &trans           &trans           &trans           &trans           &bootloader      &sys_reset
&trans        &trans         &trans         &trans         &trans         &trans           &trans  &trans           &trans           &trans           &trans           &trans
            >;
        };
    };
};
